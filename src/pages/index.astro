---
// src/pages/index.astro
import Layout from '../layouts/Layout.astro';
---

<Layout title="Refaktor Web Development">
  <main id="landing-page-container">
    <!-- This wrapper helps control positioning -->
    <div id="logo-nav-wrapper" class="initial-center">
      <img
        src="/refaktor-logo.svg"
        alt="Refaktor Company Logo"
        id="company-logo"
        width="150"
        height="150"
      />

      <!-- Navigation - Initially Hidden -->
      <nav id="main-nav" class="hidden">
        <button type="button" class="nav-button" data-target="team">Team</button>
        <button type="button" class="nav-button" data-target="projects">Projects</button>
        <button type="button" class="nav-button" data-target="contact">Contact</button>
      </nav>
    </div>

    <!-- Content Area - Initially Hidden -->
    <div id="content-area" class="hidden">
      <section id="team-content" class="content-section">
        <h2>Our Team</h2>
        <p>Meet the amazing people building your next website.</p>
        <!-- Add team member details here -->
      </section>

      <section id="projects-content" class="content-section">
        <h2>Our Projects</h2>
        <p>Check out some of the stunning websites we've delivered.</p>
        <!-- Add project showcases here -->
      </section>

      <section id="contact-content" class="content-section">
        <h2>Contact Us</h2>
        <p>Ready to start? Let's talk about your project!</p>
        <a href="mailto:your-email@example.com">your-email@example.com</a>
        <!-- Or add a contact form component -->
      </section>
    </div>
  </main>
</Layout>

<style>
  :root {
    --primary-color: #6a11cb; /* Original purple */
    --secondary-color: #2575fc; /* Original blue */
    /* --text-color: #333; -- No longer using this globally */
    /* --bg-color: #fff; -- No longer using this globally */
    --light-text-color: #f0f0f0; /* Light color for text on gradient */
    --transition-speed: 0.8s;
  }

  body {
    font-family: sans-serif;
    margin: 0;
    /* --- CHANGE HERE --- */
    /* Apply the gradient background */
    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
    /* Ensure the gradient covers the full height */
    background-attachment: fixed; /* Keeps gradient fixed during scroll */
    /* Change default text color for readability on gradient */
    color: var(--light-text-color);
    /* --- END CHANGE --- */
  }

  /* You might need to adjust other elements if they had specific colors */
  /* For example, ensure content section text is readable */
  .content-section h2 {
      /* Optional: Make headings slightly bolder white or use a gradient color */
      color: white;
      /* Or maybe: color: var(--secondary-color); */
  }

  .content-section p {
      color: var(--light-text-color); /* Ensure paragraphs inherit correctly */
      opacity: 0.9; /* Slightly less prominent than headings */
  }

    /* Adjust link color in Contact section for visibility */
  #contact-content a {
      color: white; /* Make link white */
      font-weight: bold;
      text-decoration: underline; /* Underline for clarity */
  }
   #contact-content a:hover {
      /* Optional: slightly different hover effect */
      color: #ddd;
   }

  /* Styles for buttons, logo-nav-wrapper, etc., remain largely the same */
  /* ... (keep the rest of your existing styles for positioning, animation, etc.) ... */

  #landing-page-container {
    position: relative;
    min-height: 100vh;
    width: 100%;
    overflow: hidden;
    display: flex;
    flex-direction: column;
  }

  #logo-nav-wrapper {
    position: absolute;
    left: 50%;
    width: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 1rem;
    box-sizing: border-box;
    top: 50%;
    transform: translate(-50%, -50%);
    transition: top var(--transition-speed) cubic-bezier(0.4, 0, 0.2, 1),
                transform var(--transition-speed) cubic-bezier(0.4, 0, 0.2, 1);
     /* Ensure logo/nav appear above the gradient */
     z-index: 10;
  }

  #logo-nav-wrapper.loaded {
     top: 10vh;
     transform: translate(-50%, 0);
  }

  #company-logo {
    display: block;
    margin-bottom: 1rem;
    animation: pulse 3s infinite ease-in-out;
  }

  #logo-nav-wrapper.loaded #company-logo {
     margin-bottom: 2rem;
  }

  #main-nav {
    display: flex;
    gap: 1rem;
    opacity: 0;
    transform: translateY(20px);
    transition: opacity calc(var(--transition-speed) * 0.8) ease-out,
                transform calc(var(--transition-speed) * 0.8) ease-out;
    transition-delay: calc(var(--transition-speed) * 0.5);
    pointer-events: none;
  }

  #main-nav.visible {
    opacity: 1;
    transform: translateY(0);
    pointer-events: auto;
  }

  .nav-button {
    padding: 0.6rem 1.2rem;
    /* Keep button background, it contrasts well */
    background-color: var(--primary-color);
    /* Button text needs to be light */
    color: white;
    border: 1px solid rgba(255, 255, 255, 0.5); /* Optional: add subtle border */
    border-radius: 5px;
    font-weight: bold;
    cursor: pointer;
    transition: background-color 0.2s ease, transform 0.2s ease;
  }

  .nav-button:hover {
    background-color: var(--secondary-color);
    transform: translateY(-2px);
  }
   .nav-button.active {
    background-color: var(--secondary-color);
    box-shadow: 0 0 8px rgba(255,255,255,0.4); /* Lighter shadow */
  }

  #content-area {
    padding: 2rem;
    width: 100%;
    max-width: 960px;
    margin: 0 auto;
    box-sizing: border-box;
    opacity: 0;
    transition: opacity calc(var(--transition-speed) * 0.8) ease-out;
    transition-delay: calc(var(--transition-speed) * 0.6);
    pointer-events: none;
    margin-top: 0;
     /* Ensure content appears above the gradient */
     position: relative; /* Needed if adding pseudo-elements later */
     z-index: 5;
  }

  #content-area.visible {
     opacity: 1;
     pointer-events: auto;
     margin-top: calc(10vh + 150px + 50px + 4rem);
  }

  .content-section {
    display: none;
    animation: fadeIn 0.5s ease forwards;
    padding: 1.5rem;
    border-radius: 8px;
    /* Optional: Add a subtle background to content sections */
    /* background-color: rgba(0, 0, 0, 0.1); */
  }

  .content-section.active {
    display: block;
  }

  .hidden {
      opacity: 0;
      pointer-events: none;
  }

  @keyframes pulse {
    0% { transform: scale(1); opacity: 0.9; }
    50% { transform: scale(1.08); opacity: 1; }
    100% { transform: scale(1); opacity: 0.9; }
  }

  @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
  }
</style>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const logoNavWrapper = document.getElementById('logo-nav-wrapper');
    const mainNav = document.getElementById('main-nav');
    const contentArea = document.getElementById('content-area');
    const navButtons = document.querySelectorAll('.nav-button');
    const contentSections = document.querySelectorAll('.content-section');

    // --- Initial Animation Trigger ---
    const initialDelay = 3000; // 5 seconds

    const revealContent = () => {
      // --- THIS IS THE KEY CHANGE ---
      // Add the 'loaded' class to trigger the CSS transition
      // This makes it move from top: 50% / translate(-50%, -50%)
      // to top: 10vh / translate(-50%, 0) smoothly via CSS transition
      logoNavWrapper?.classList.add('loaded');

      // Make navigation and content area visible (triggers CSS transitions)
      // Note: remove 'hidden' class if you used it, otherwise just add 'visible'
      mainNav?.classList.add('visible');
      mainNav?.classList.remove('hidden'); // Ensure hidden class is removed if used
      contentArea?.classList.add('visible');
      contentArea?.classList.remove('hidden'); // Ensure hidden class is removed if used

      // Optional: show the first section by default after reveal
      // showContent('team');
      // highlightButton('team');
    };

    const timeoutId = setTimeout(revealContent, initialDelay);

    // Optional: Clear timeout if user interacts early
    // window.addEventListener('scroll', () => clearTimeout(timeoutId), { once: true });


    // --- Navigation Button Click Handling ---
    function showContent(targetId) {
      contentSections.forEach(section => {
        section.classList.remove('active');
      });
      const targetSection = document.getElementById(`${targetId}-content`);
      if (targetSection) {
        targetSection.classList.add('active');
      }
    }

    function highlightButton(targetId) {
       navButtons.forEach(button => {
           button.classList.remove('active');
           if (button.dataset.target === targetId) {
               button.classList.add('active');
           }
       });
    }

    navButtons.forEach(button => {
      button.addEventListener('click', () => {
        const target = button.dataset.target;
        if (target) {
          showContent(target);
          highlightButton(target);
        }
      });
    });
  });
</script>